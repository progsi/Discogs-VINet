MODEL :
  NAME: berlin
  # Model
  ARCHITECTURE: coverhunter
  EMBEDDING_SIZE: 512
  # ATTENTION_DIM: 256 
  # NUM_BLOCKS = 6
  # OUTPUT_DIM = 128
  OUTPUT_CLS: 76_775 # for bottleneck = No. of classes of Discogs-Training set. Is this a good idea?
  FREQUENCY_BINS: 84
  SAMPLE_RATE: 22050
  DOWNSAMPLE_FACTOR: 20 # might try out 3 (like CoverHunter)
  L2_NORMALIZE: True # L2 normalize the embeddings.
  SIMILARITY_SEARCH: MIPS # ['MCSS', 'NNS', 'MIPS'] If L2_NORMALIZE is True, use 'MIPS' for faster search.
  CHECKPOINT_DIR: logs/checkpoints/
  # CONV_CHANNEL: 40
  # NORMALIZATION: bn # ['bn', 'in', 'ibn']
  # POOLING: adaptive_max # ['adaptive_max', 'gem', 'softpool']
  # PROJECTION: linear # ['none', 'linear', 'affine', 'mlp']

TRAIN:
    # Train and Validation, and Augmentation directories
    FEATURES_DIR: /data/audio/cqt/
    TRAIN_CLIQUES: /data/discogs/Discogs-VI-YT-20240701-light.json.train
    VALIDATION_CLIQUES: /data/discogs/Discogs-VI-YT-20240701-light.json.val
    M_PER_CLASS: 4 # Number of versions per clique during a training iteration.
    CONTEXT_LENGTH: 7600 # Number of frames to consider as context, before downsampling.
    BATCH_SIZE: 216 # Number of versions in batch.
    EPOCHS: 40 # Number of epochs to train.
    LOSS:
      TRIPLET:
        WEIGHT: 0.1 # Weight of the loss.
        MARGIN: 0.3 # Triplet loss margin
        MINING: semihard # key from pytorch-metric-learning
        SQUARED_DISTANCE: False # Use squared distance in the loss.
        NON_ZERO_MEAN: True # If true, the zero losses in the batch are filtered out before averaging.
      CENTER:
        WEIGHT: 0.01 # Weight of the loss.
        NUM_CLS: 76_775 # Number of classes.
        FEAT_DIM: 512 # Embedding dimension
    OPTIMIZER: Adam # ['Adam', 'AdamW']
    AUTOMATIC_MIXED_PRECISION: True # Use mixed precision training.
    LR:
      SCHEDULE: LIN-WARMUP-PCWS # ['NONE', 'STEP', 'MULTISTEP', 'EXPONENTIAL', 'COSINE, LIN-WARMUP-PCWS'].
      LR: 0.0001 # Starting learning rate in case of a schedule or constant in case of NONE.
      PARAMS:
        MAX_LR: 0.01
        WARMUP_STEPS: 5
        MILESTONES_LRS:
          - [ 8, 0.001]
          - [13, 0.0001]
          - [20, 0.00001]
          - [30, 0.000001]
          - [38, 0.0000001]
    CUDA_DETERMINISTIC: False # Set to True for deterministic training.
    CUDA_BENCHMARK: False # Set to True for benchmarking.
    CLIQUE_USAGE_RATIO: 1.0 # Fraction of training data to use. Useful for debugging. 1.0 to use 100% of data.